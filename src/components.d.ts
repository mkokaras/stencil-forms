/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppButton {
        /**
          * Button is disabled
         */
        "disabled": boolean;
        /**
          * The text of the button
         */
        "text": string;
        /**
          * The type of the button
         */
        "type": string;
    }
    interface AppForm {
    }
    interface AppInput {
        /**
          * Error messages matching the validity state
         */
        "errorMessage": string;
        /**
          * The label of the input
         */
        "label": string;
        /**
          * This is needed for form associated components. The name of the input will be the name in the form object.
         */
        "name": string;
        /**
          * Required validator
         */
        "required": boolean;
        /**
          * Type of input e.g. text,email,password etc
         */
        "type": string;
        /**
          * The initial value of the input
         */
        "value": string;
    }
}
declare global {
    interface HTMLAppButtonElement extends Components.AppButton, HTMLStencilElement {
    }
    var HTMLAppButtonElement: {
        prototype: HTMLAppButtonElement;
        new (): HTMLAppButtonElement;
    };
    interface HTMLAppFormElement extends Components.AppForm, HTMLStencilElement {
    }
    var HTMLAppFormElement: {
        prototype: HTMLAppFormElement;
        new (): HTMLAppFormElement;
    };
    interface HTMLAppInputElement extends Components.AppInput, HTMLStencilElement {
    }
    var HTMLAppInputElement: {
        prototype: HTMLAppInputElement;
        new (): HTMLAppInputElement;
    };
    interface HTMLElementTagNameMap {
        "app-button": HTMLAppButtonElement;
        "app-form": HTMLAppFormElement;
        "app-input": HTMLAppInputElement;
    }
}
declare namespace LocalJSX {
    interface AppButton {
        /**
          * Button is disabled
         */
        "disabled"?: boolean;
        /**
          * The text of the button
         */
        "text"?: string;
        /**
          * The type of the button
         */
        "type"?: string;
    }
    interface AppForm {
    }
    interface AppInput {
        /**
          * Error messages matching the validity state
         */
        "errorMessage"?: string;
        /**
          * The label of the input
         */
        "label"?: string;
        /**
          * This is needed for form associated components. The name of the input will be the name in the form object.
         */
        "name"?: string;
        /**
          * Required validator
         */
        "required"?: boolean;
        /**
          * Type of input e.g. text,email,password etc
         */
        "type"?: string;
        /**
          * The initial value of the input
         */
        "value"?: string;
    }
    interface IntrinsicElements {
        "app-button": AppButton;
        "app-form": AppForm;
        "app-input": AppInput;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-button": LocalJSX.AppButton & JSXBase.HTMLAttributes<HTMLAppButtonElement>;
            "app-form": LocalJSX.AppForm & JSXBase.HTMLAttributes<HTMLAppFormElement>;
            "app-input": LocalJSX.AppInput & JSXBase.HTMLAttributes<HTMLAppInputElement>;
        }
    }
}
